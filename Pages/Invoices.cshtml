<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Invoices</title>
    <!-- Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <h1 class="mb-4">Invoices</h1>
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Invoice ID</th>
                    <th>Customer Name</th>
                    <th>Date</th>
                    <th>Total Price</th>
                    <th>Products</th>
                </tr>
            </thead>
            <tbody id="invoiceTableBody">
                <!-- Rows will be inserted here by JavaScript -->
            </tbody>
        </table>
    </div>

    <!-- Bootstrap JS and dependencies -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        // Example data - replace this with actual data fetching logic
       async function fetchInvoices() {
            try {
                // Replace with your API endpoint
                const response = await fetch('/api/invoice');
                
                if (!response.ok) {
                    throw new Error('Network response was not ok.');
                }
                
                const invoices = await response.json();
                renderInvoices(invoices);
            } catch (error) {
                console.error('Error fetching invoices:', error);
            }
        }

       function renderInvoices(invoices) {
    const tbody = document.getElementById('invoiceTableBody');
    tbody.innerHTML = '';

    invoices.forEach(invoice => {
        const row = document.createElement('tr');
        row.innerHTML = `
            <td>${invoice.id}</td>
            <td>${invoice.customerName}</td>
            <td>${invoice.date}</td>
            <td>$${invoice.totalPrice.toFixed(2)}</td>
            <td>
                <ul class="list-unstyled">
                    ${invoice.products.map(product => {
                        // Calculate the total price for the product after applying tax and discount
                        const totalPrice = (product.price * product.quantity) * (1 + product.tax / 100) * (1 - product.discount / 100);
                        return `
                            <li>
                                ${product.productName} - ${product.quantity} x $${product.price.toFixed(2)}
                                <br>
                                <small>Tax: ${product.tax}% | Discount: ${product.discount}%</small>
                                <br>
                                Total: $${totalPrice.toFixed(2)}
                            </li>
                        `;
                    }).join('')}
                </ul>
            </td>
        `;
        tbody.appendChild(row);
    });
}


        document.addEventListener('DOMContentLoaded', fetchInvoices);
    </script>
</body>
</html>
